native domain Number {{
        @number value: self,
        parse(string: String, radix: Number): Number,
    }

    to String;
    to Boolean;

    trait Equal is (other: Number) => value === other.value;
    trait LessThan is (max: Number) => value < max;
    trait GreaterThan is (min: Number) => value > min;
    trait LessThanOrEqual is (max: Number) => (value < max) || Equal(max);
    trait GreaterThanOrEqual is (min: Number) => (value > min) || Equal(min);
    trait InRange is (min: Number, max: Number) => GreaterThanOrEqual(min) && LessThanOrEqual(max);

    native domain Random is { (min: Number, max: Number): self }

    domain Natural is GreaterThanOrEqual(0);
    domain Positive is GreaterThan(0);
    domain Negative is LessThan(0);
}
