domain Test {
  use Alchemy.Types: {
    Ingredient: {
      Stack,
    },
    Recipes,
  };

  use Alchemy.Ingredients: {
    Zhenshen,
    Lotus,
  };
  use Alchemy.Recipes: {
    CommonVariations,
    PillRecipes,
  };
  use Alchemy.Cauldrons: {
    ProfoundCauldron,
  };

  can() {
    let recipes = Recipes(failure: CommonVariations.Sludge, [
      PillRecipes.StarCultivation,
    ]);

    let temperature = 100;
    let ingredients = [
      Stack(ingredient: Zhenshen, count: 1),
      Stack(ingredient: Lotus, count: 5),
    ];

    @inspect
    let variation = recipes.findForIngredients(ingredients);

    @inspect
    let outcome = ProfoundCauldron.brew(variation, ingredients);
  }
}
