domain Roll of Answer {{
        rolled: Number.Natural = 0;

        make(dice: Number.Positive): Roll => Withdrawn() || {
            let rolled = Random.inRange(1, dice);

            if (rolled is SnakeEye) {
                return Roll(0);
            }

            return Held(rolled) || Roll(rolled);
        }
    }

    trait Hold is Equal({ value: `h` });
    trait Withdraw is Equal({ value: `w` });
    trait SnakeEye is Equal(1);

    domain Withdrawn is {{ () => prompt({ value: `Roll or withdraw? [Rw]: ` }) }
        is Withdraw;
    }

    domain Held is {{ (rolled: Number) => self(IO.prompt(`Keep or hold? [Kh]: `), rolled) }
        is Hold;
    }
}
